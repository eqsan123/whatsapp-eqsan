const { Client, Buttons, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

 
const client = new Client({
    authStrategy: new LocalAuth(),

});

client.on('qr', qr => {
    qrcode.generate(qr, { small: true })
});

client.on('ready', () => {
    console.log('Tudo certo! WhatsApp conectado...')
});

client.on('message', msg => {
    console.log(msg.body)
});

client.initialize();

const delay = ms => new Promise(res => setTimeout(res, ms));

let estadoUsuario = {};
let dadosUsuario = {};
let atendidos = {}; // Armazena timestamps dos atendimentos conclu√≠dos
const TEMPO_ESPERA = 24 * 60 * 60 * 1000; // 24 horas em milissegundos

client.on('message', async (msg) => {
    const chat = await msg.getChat();
    const nomeUsuario = chat.name || "Amigo";
    const now = Date.now();

    if (!msg.from.endsWith('@c.us')) return;

    // Verifica se o n√∫mero j√° foi atendido nas √∫ltimas 24 horas
    if (atendidos[msg.from] && now - atendidos[msg.from] < TEMPO_ESPERA) {
        return; // Ignora a mensagem
    }

    if (!estadoUsuario[msg.from]) {
        estadoUsuario[msg.from] = 'solicitando_empresa';
        await chat.sendStateTyping();
        await delay(2000);
        await client.sendMessage(msg.from, `üåü Ol√° ${nomeUsuario}, tudo bem? üòÄ\n\nDigite o nome de sua empresa (campo obrigat√≥rio).`);
        return;
    }

    if (estadoUsuario[msg.from] === 'solicitando_empresa') {
        dadosUsuario[msg.from] = { empresa: msg.body };
        estadoUsuario[msg.from] = 'verificando_cliente';
        await chat.sendStateTyping();
        await delay(2000);
        await client.sendMessage(msg.from,
            `${nomeUsuario}, voc√™ j√° √© nosso cliente?\n\n` +
            '1Ô∏è‚É£ - Sim\n' +
            '2Ô∏è‚É£ - N√£o\n' +
            '(Digite o n√∫mero da op√ß√£o) ‚å®Ô∏è'
        );
        return;
    }

    if (estadoUsuario[msg.from] === 'verificando_cliente') {
        if (msg.body === '1' || msg.body === '2') {
            estadoUsuario[msg.from] = 'menu_principal';
            await chat.sendStateTyping();
            await delay(2000);
            await client.sendMessage(msg.from,
                'Para qual assunto deseja atendimento? ü§î\n\n' +
                '1Ô∏è‚É£ - Comercial\n' +
                '2Ô∏è‚É£ - Suprimentos\n' +
                '3Ô∏è‚É£ - Recursos Humanos\n' +
                '4Ô∏è‚É£ - Outros'
            );
        } else {
            await client.sendMessage(msg.from, 'Por favor, digite 1 para "Sim" ou 2 para "N√£o".');
        }
        return;
    }

    if (estadoUsuario[msg.from] === 'menu_principal') {
        if (msg.body === '1') {
            estadoUsuario[msg.from] = 'comercial';
            await chat.sendStateTyping();
            await delay(2000);
            await client.sendMessage(msg.from,
                'Ok! Como posso te ajudar na √°rea Comercial? üíº\n\n' +
                '1Ô∏è‚É£ - Novo or√ßamento\n' +
                '2Ô∏è‚É£ - Or√ßamentos em andamento\n' +
                '3Ô∏è‚É£ - Outra op√ß√£o'
            );
            return;
        } else if (msg.body === '2') {
            await client.sendMessage(msg.from, 'Ok.   \nEntre em contato no n√∫mero **tel:+551146642525**. üìû\n A Eqsan agrade√ße seu contato');
            atendidos[msg.from] = now;
            delete estadoUsuario[msg.from];
            return;
        } else if (msg.body === '3') {
            await client.sendMessage(msg.from, 'Acesse o link abaixo para enviar seu curr√≠culo:\nüîó https://eqsan.com.br/trabalhe-conosco/\n\nDesejamos boa sorte! üçÄ');
            atendidos[msg.from] = now;
            delete estadoUsuario[msg.from];
            return;
        } else if (msg.body === '4') {
            estadoUsuario[msg.from] = 'outros';
            await chat.sendStateTyping();
            await delay(2000);
            await client.sendMessage(msg.from,
                'Por favor, descreva sua d√∫vida para que possamos ajudar da melhor forma poss√≠vel.'
            );
            return;
        }
    }

    if (estadoUsuario[msg.from] === 'comercial') {
        if (msg.body === '1') {
            await client.sendMessage(msg.from, 'üìù Por favor, digite os detalhes do or√ßamento ou aguarde. Nossa equipe entrar√° em contato em breve! üìû');
        } else if (msg.body === '2') {
            await client.sendMessage(msg.from, 'üìÑ Para consultar or√ßamentos em andamento, digite o n√∫mero do pedido. üîç Nossa equipe analisar√° e retornar√° o contato em breve! ‚è≥');
        } else {
            await client.sendMessage(msg.from, 'ü§ù Nossa equipe entrar√° em contato para entender melhor sua necessidade e oferecer a melhor solu√ß√£o! üíº');
        }
        atendidos[msg.from] = now;
        delete estadoUsuario[msg.from];
        return;
    }
    

    if (estadoUsuario[msg.from] === 'outros') {
        await client.sendMessage(msg.from, 'Nossa equipe ir√° responder sua solicita√ß√£o em breve.');
        atendidos[msg.from] = now;
        delete estadoUsuario[msg.from];
        return;
    }

    await client.sendMessage(msg.from, 'N√£o entendi sua resposta. Digite um n√∫mero v√°lido.');
});
